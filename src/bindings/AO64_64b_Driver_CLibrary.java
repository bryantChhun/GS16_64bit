package bindings;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import java.nio.ByteBuffer;
/**
 * JNA Wrapper for library <b>AO64_64b_Driver_C</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface AO64_64b_Driver_CLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "AO64_64b_Driver_C";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(AO64_64b_Driver_CLibrary.JNA_LIBRARY_NAME);
	public static final AO64_64b_Driver_CLibrary INSTANCE = (AO64_64b_Driver_CLibrary)Native.loadLibrary(AO64_64b_Driver_CLibrary.JNA_LIBRARY_NAME, AO64_64b_Driver_CLibrary.class);
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int BCR = (int)0x00;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int Reserved = (int)0x04;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int Reserved1 = (int)0x08;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int BUFFER_OPS = (int)0x0C;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int FW_REV = (int)0x10;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int AUTO_CAL = (int)0x14;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int OUTPUT_DATA_BUFFER = (int)0x18;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int BUFFER_SIZE = (int)0x1C;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int BUFFER_THRSHLD = (int)0x20;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int RATE_A = (int)0x24;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int RATE_B = (int)0x28;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int CLK_INITIATOR = (int)0x0001;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int TRIG_INITIATOR = (int)0x0002;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int DISCONNECT_OUT = (int)0x0004;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int REMOTE_GND_SENSE = (int)0x0008;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int OFFSET_BINARY = (int)0x0010;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int EXT_CLK = (int)0x0001;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int EXT_TRIG = (int)0x0002;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int ENABLE_CLK = (int)0x0020;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int CLK_RDY = (int)0x0040;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int OPEN_BUFF = (int)0x0000;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int CIRC_BUFF = (int)0x0100;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int LOAD_REQ = (int)0x0200;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int LOAD_RDY = (int)0x0400;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int CLR_BUFFER = (int)0x0800;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int LOCAL = (int)0;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final int DMA = (int)1;
	/** <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h</i> */
	public static final long MINUS_ONE_LONG = (long)0xFFFFFFFFL;
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>U32 AO64_66_FindBoards(char*, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:100</i><br>
	 * @deprecated use the safer methods {@link #AO64_66_FindBoards(java.nio.ByteBuffer, bindings.AO64_64b_Driver_CLibrary.U32)} and {@link #AO64_66_FindBoards(com.sun.jna.Pointer, bindings.AO64_64b_Driver_CLibrary.U32)} instead
	 */
	@Deprecated 
	AO64_64b_Driver_CLibrary.U32 AO64_66_FindBoards(Pointer pDeviceInfo, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>U32 AO64_66_FindBoards(char*, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:100</i>
	 */
	AO64_64b_Driver_CLibrary.U32 AO64_66_FindBoards(ByteBuffer pDeviceInfo, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>U32 AO64_66_Get_Handle(U32*, U32)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:108</i>
	 */
	AO64_64b_Driver_CLibrary.U32 AO64_66_Get_Handle(AO64_64b_Driver_CLibrary.U32 ulError, AO64_64b_Driver_CLibrary.U32 BoardNumber);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Close_Handle(U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:116</i>
	 */
	void AO64_66_Close_Handle(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>U32 AO64_66_Read_Local32(U32, U32*, U32)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:126</i>
	 */
	AO64_64b_Driver_CLibrary.U32 AO64_66_Read_Local32(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulError, AO64_64b_Driver_CLibrary.U32 ulRegister);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Write_Local32(U32, U32*, U32, U32)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:135</i>
	 */
	void AO64_66_Write_Local32(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulError, AO64_64b_Driver_CLibrary.U32 ulRegister, AO64_64b_Driver_CLibrary.U32 uiValue);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Initialize(U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:143</i>
	 */
	void AO64_66_Initialize(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulErrorIn);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>U32 AO64_66_Autocal(U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:153</i>
	 */
	AO64_64b_Driver_CLibrary.U32 AO64_66_Autocal(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Clear_Buffer(U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:161</i>
	 */
	void AO64_66_Clear_Buffer(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulErrorIn);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>double AO64_66_Set_Sample_Rate(U32, double, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:169</i>
	 */
	double AO64_66_Set_Sample_Rate(AO64_64b_Driver_CLibrary.U32 BoardNumber, double fRate, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>U32 AO64_66_EnableInterrupt(U32, U32, U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:182</i>
	 */
	AO64_64b_Driver_CLibrary.U32 AO64_66_EnableInterrupt(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulValue, AO64_64b_Driver_CLibrary.U32 ulType, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_DisableInterrupt(U32, U32, U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:193</i>
	 */
	void AO64_66_DisableInterrupt(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulValue, AO64_64b_Driver_CLibrary.U32 ulType, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Register_Interrupt_Notify(U32, GS_NOTIFY_OBJECT*, U32, U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:204</i>
	 */
	void AO64_66_Register_Interrupt_Notify(AO64_64b_Driver_CLibrary.U32 BoardNumber, GS_NOTIFY_OBJECT event, AO64_64b_Driver_CLibrary.U32 ulIntr, AO64_64b_Driver_CLibrary.U32 ulType, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Cancel_Interrupt_Notify(U32, GS_NOTIFY_OBJECT*, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:210</i>
	 */
	void AO64_66_Cancel_Interrupt_Notify(AO64_64b_Driver_CLibrary.U32 BoardNumber, GS_NOTIFY_OBJECT event, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Open_DMA_Channel(U32, U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:215</i>
	 */
	void AO64_66_Open_DMA_Channel(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulChannel, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>U32 AO64_66_DMA_Transfer(U32, U32, U32, U32*, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:223</i>
	 */
	AO64_64b_Driver_CLibrary.U32 AO64_66_DMA_Transfer(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulChannel, AO64_64b_Driver_CLibrary.U32 ulWords, AO64_64b_Driver_CLibrary.U32 uData, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Close_DMA_Channel(U32, U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:230</i>
	 */
	void AO64_66_Close_DMA_Channel(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulChannel, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Enable_Clock(U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:236</i>
	 */
	void AO64_66_Enable_Clock(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Disable_Clock(U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:242</i>
	 */
	void AO64_66_Disable_Clock(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>U32 AO64_66_Setup_DmaCmdChaining(U32, GS_DMA_DESCRIPTOR*, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:248</i>
	 */
	AO64_64b_Driver_CLibrary.U32 AO64_66_Setup_DmaCmdChaining(AO64_64b_Driver_CLibrary.U32 BoardNumber, GS_DMA_DESCRIPTOR DmaSetup, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>U32 AO64_66_Start_DmaCmdChaining(U32, U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:254</i>
	 */
	AO64_64b_Driver_CLibrary.U32 AO64_66_Start_DmaCmdChaining(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulChannel, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Close_DmaCmdChaining(U32, U32, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:260</i>
	 */
	void AO64_66_Close_DmaCmdChaining(AO64_64b_Driver_CLibrary.U32 BoardNumber, AO64_64b_Driver_CLibrary.U32 ulChannel, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>U32 AO64_66_Get_Physical_Memory(U32, GS_PHYSICAL_MEM*, BOOLEAN, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:266</i>
	 */
	AO64_64b_Driver_CLibrary.U32 AO64_66_Get_Physical_Memory(AO64_64b_Driver_CLibrary.U32 BoardNumber, GS_PHYSICAL_MEM memPtr, AO64_64b_Driver_CLibrary.BOOLEAN bSmallerOk, AO64_64b_Driver_CLibrary.U32 ulError);
	/**
	 * ==============================================================================<br>
	 * Original signature : <code>void AO64_66_Free_Physical_Memory(U32, GS_PHYSICAL_MEM*, U32*)</code><br>
	 * <i>native declaration : DriverFiles/66-16AO64/AO64eintface.h:272</i>
	 */
	void AO64_66_Free_Physical_Memory(AO64_64b_Driver_CLibrary.U32 BoardNumber, GS_PHYSICAL_MEM memPtr, AO64_64b_Driver_CLibrary.U32 ulError);

	public static class U64 extends PointerType {
		public U64(Pointer address) {
			super(address);
		}
		public U64() {
			super();
		}
	};
	public static class U8 extends PointerType {
		public U8(Pointer address) {
			super(address);
		}
		public U8() {
			super();
		}
	};
	public static class U32 extends PointerType {
		public U32(Pointer address) {
			super(address);
		}
		public U32() {
			super();
		}
	};
	public static class BOOLEAN extends PointerType {
		public BOOLEAN(Pointer address) {
			super(address);
		}
		public BOOLEAN() {
			super();
		}
	};
}
